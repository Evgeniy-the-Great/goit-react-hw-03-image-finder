{"version":3,"sources":["components/Loader/Spiner.module.css","servises/api.js","components/Modal/Modal.js","components/ImageGalleryItem/ImageGalleryItem.js","components/Loader/Spiner.js","components/ImageGallery/ImageGallery.js","components/Searchbar/Searchbar.js","components/App.js","index.js"],"names":["module","exports","getImages","pictureTag","page","fetch","then","res","json","data","hits","Modal","state","handleKeyDown","e","code","props","onClose","handleBackdropeClick","currentTarget","target","window","addEventListener","this","removeEventListener","className","onClick","src","picture","alt","Component","ImageGalleryItem","showModal","largeImage","toggleModal","setState","prev","id","pictures","map","webformatURL","largeImageURL","Spiner","style","spiner","type","color","height","width","timeout","ImageGallery","isHidden","loading","onBtnClick","finally","scrollTo","top","document","documentElement","scrollHeight","behavior","prevProps","prevState","Searchbar","handleChange","value","handleSubmit","preventDefault","trim","onSubmit","toast","error","autocomplete","autofocus","placeholder","onChange","App","handleFormSubmit","autoClose","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.1797fa82.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"spiner\":\"Spiner_spiner__tpk5W\"};","const BASE_URL = 'https://pixabay.com/api/';\r\nconst ApiKey = '23292675-06f406722274daa99671b1028';\r\n\r\nexport const getImages = (pictureTag, page) => {\r\n  return fetch(\r\n    `${BASE_URL}?q=${pictureTag}&page=${page}&key=${ApiKey}&image_type=photo&orientation=horizontal&per_page=12`,\r\n  )\r\n    .then(res => res.json())\r\n    .then(data => data.hits);\r\n};\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Modal extends Component {\r\n  state = {};\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      this.props.onClose(e);\r\n    }\r\n  };\r\n\r\n  handleBackdropeClick = e => {\r\n    if (e.currentTarget === e.target) {\r\n      this.props.onClose(e);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Overlay\" onClick={this.handleBackdropeClick}>\r\n        <div className=\"Modal\">\r\n          <img src={this.props.picture} alt=\"\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  picture: PropTypes.string,\r\n};\r\n\r\nexport default Modal;\r\n","import React, { Component } from 'react';\r\nimport Modal from '../Modal/Modal';\r\n\r\nclass ImageGalleryItem extends Component {\r\n  state = {\r\n    showModal: false,\r\n    largeImage: '',\r\n  };\r\n\r\n  toggleModal = e => {\r\n    this.setState(prev => ({\r\n      showModal: !prev.showModal,\r\n      largeImage: e.target.id || '',\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.props.pictures.map(picture => (\r\n          <li className=\"ImageGalleryItem\" key={picture.id}>\r\n            <img\r\n              src={picture.webformatURL}\r\n              alt=\"\"\r\n              className=\"ImageGalleryItem-image\"\r\n              onClick={this.toggleModal}\r\n              id={picture.largeImageURL}\r\n            />\r\n          </li>\r\n        ))}\r\n        {this.state.showModal && (\r\n          <Modal onClose={this.toggleModal} picture={this.state.largeImage} />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageGalleryItem;\r\n","import Loader from 'react-loader-spinner';\r\nimport React, { Component } from 'react';\r\nimport style from './Spiner.module.css';\r\n\r\nexport default class Spiner extends Component {\r\n  //other logic\r\n  render() {\r\n    return (\r\n      <div className={style.spiner}>\r\n        {' '}\r\n        <Loader\r\n          type=\"TailSpin\"\r\n          color=\"#00BFFF\"\r\n          height={100}\r\n          width={100}\r\n          timeout={3000} //3 secs\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { getImages } from '../../servises/api';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\nimport PropTypes from 'prop-types';\r\nimport Loader from '../Loader/Spiner';\r\n\r\nclass ImageGallery extends Component {\r\n  state = {\r\n    pictures: null,\r\n    isHidden: false,\r\n    page: 1,\r\n    loading: false,\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.pictureTag !== this.props.pictureTag) {\r\n      this.setState({ loading: true });\r\n      getImages(this.props.pictureTag, 1)\r\n        .then(pictures =>\r\n          this.setState(prev => ({\r\n            pictures,\r\n            isHidden: true,\r\n            page: prev.page + 1,\r\n          })),\r\n        )\r\n        .finally(() => this.setState({ loading: false }));\r\n    }\r\n  }\r\n\r\n  onBtnClick = () => {\r\n    this.setState({ loading: true });\r\n    getImages(this.props.pictureTag, this.state.page)\r\n      .then(pictures =>\r\n        this.setState(prev => ({\r\n          pictures: [...prev.pictures, ...pictures],\r\n          isHidden: true,\r\n          page: prev.page + 1,\r\n        })),\r\n      )\r\n      .finally(() =>\r\n        window.scrollTo({\r\n          top: document.documentElement.scrollHeight,\r\n          behavior: 'smooth',\r\n        }),\r\n      );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"ImageContainer\">\r\n        {this.state.loading && <Loader />}\r\n        <ul className=\"ImageGallery\">\r\n          {this.state.pictures && (\r\n            <ImageGalleryItem pictures={this.state.pictures} />\r\n          )}\r\n        </ul>\r\n        {this.state.isHidden && (\r\n          <button type=\"button\" className=\"Button\" onClick={this.onBtnClick}>\r\n            Load more\r\n          </button>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  pictureTag: PropTypes.string,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import React, { Component } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Searchbar extends Component {\r\n  state = {\r\n    picture: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({ picture: e.target.value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (this.state.picture.trim() === '') {\r\n      toast.error('Введите название картинки');\r\n      return;\r\n    }\r\n    this.props.onSubmit(this.state.picture);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autocomplete=\"off\"\r\n            autofocus\r\n            placeholder=\"Search images and photos\"\r\n            onChange={this.handleChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n\r\nexport default Searchbar;\r\n","import React, { Component } from 'react';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport ImageGallery from './ImageGallery/ImageGallery';\r\nimport Searchbar from './Searchbar/Searchbar';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    pictureTag: '',\r\n  };\r\n\r\n  handleFormSubmit = pictureTag => {\r\n    this.setState({ pictureTag });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Searchbar onSubmit={this.handleFormSubmit} />\r\n        <ImageGallery pictureTag={this.state.pictureTag} />\r\n        <ToastContainer autoClose={3000} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}